{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar apollo_utilities_1 = require(\"apollo-utilities\");\n\nvar react_apollo_1 = require(\"react-apollo\");\n\nvar aws_appsync_1 = require(\"aws-appsync\");\n\nexports.graphqlMutation = function (mutation, cacheUpdateQuery, typename, idField, operationType) {\n  return withGraphQL(reactMutator(mutation, cacheUpdateQuery, typename, idField, operationType));\n};\n\nvar withGraphQL = function (options) {\n  return function (Component) {\n    var document = options.document;\n    var A = react_apollo_1.graphql(document, options)(Component);\n\n    var B = function (props, context) {\n      var client = context.client;\n      return React.createElement(A, __assign({}, props, {\n        client: client\n      }));\n    };\n\n    B.contextTypes = {\n      client: PropTypes.object.isRequired\n    };\n    return B;\n  };\n};\n\nvar reactMutator = function (mutation, cacheUpdateQuery, typename, idField, operationType) {\n  return {\n    document: mutation,\n    props: function (props) {\n      var _a;\n\n      var client = props.ownProps.client;\n      var mutationName = apollo_utilities_1.resultKeyNameFromField(mutation.definitions[0].selectionSet.selections[0]);\n      return _a = {}, _a[mutationName] = function (variables) {\n        return props.mutate(aws_appsync_1.buildMutation(client, mutation, variables, cacheUpdateQuery, typename, idField, operationType));\n      }, _a;\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}